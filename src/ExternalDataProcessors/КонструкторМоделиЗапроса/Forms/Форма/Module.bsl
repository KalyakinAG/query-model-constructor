Перем Метки;

&НаКлиенте
Процедура КомандаПолучитьТекстМодели(Команда)
	КомандаПолучитьТекстМоделиНаСервере();
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция Псевдоним(ПутьКДанным) 
	Возврат СтрЗаменить(ОбщийКлиентСервер.НачалоСтрокиПослеРазделителя(ПутьКДанным, "."), ".", "");
КонецФункции

&НаСервере
Процедура ДобавитьТекстПоля(Строки, ЗапросПакета, Поле)
	Колонка = ЗапросПакета.Колонки.Найти(Поле);
	Псевдоним = Псевдоним(Строка(Поле));
	Если Колонка.Поля.Количество() = 1 И Псевдоним = Колонка.Псевдоним Тогда
		Строки.Добавить(СтрШаблон("МодельЗапроса.Поле(""%1"");", Поле));
		Возврат;
	КонецЕсли;
	Строки.Добавить(СтрШаблон("МодельЗапроса.Поле(""%1"", ""%2"");", Поле, Колонка.Псевдоним));
КонецПроцедуры

&НаСервере
Процедура ДобавитьТекстСоединения(Строки, Источник, Соединение)
	ТипСоединения = Соединение.ТипСоединения;
	ИсточникСлева = Источник.Источник;
	ИсточникСправа = Соединение.Источник.Источник; 
	Если ТипСоединения = ТипСоединенияСхемыЗапроса.ЛевоеВнешнее Тогда
		Метод = "ЛевоеСоединение";
	ИначеЕсли ТипСоединения = ТипСоединенияСхемыЗапроса.Внутреннее Тогда
		Метод = "ВнутреннееСоединение";
	ИначеЕсли ТипСоединения = ТипСоединенияСхемыЗапроса.ПравоеВнешнее Тогда
		Метод = "ПравоеСоединение";
	ИначеЕсли ТипСоединения = ТипСоединенияСхемыЗапроса.ПолноеВнешнее Тогда
		Метод = "ПолноеСоединение";
	Иначе
		ВызватьИсключение СтрШаблон("Неизвестный тип соединения %1", ТипСоединения);
	КонецЕсли;
	Условие = Соединение.Условие;
	Связь = Условие;
	ЭтоСвязь = Истина;
	ПоляСвязи = Новый Массив;
	Для Каждого УсловиеСвязи Из СтрРазделить(СтрЗаменить(Связь, " И ", ","), ",") Цикл
		Состав = СтрРазделить(УсловиеСвязи, "=");
		Если Состав.ВГраница() <> 1 Тогда
			ЭтоСвязь = Ложь;
			Прервать
		КонецЕсли;
		ПолеСлева = СокрЛП(Состав[0]);
		ПолеСлева = СтрЗаменить(ПолеСлева, ИсточникСлева.Псевдоним + ".", "");
		ПолеСправа = СокрЛП(Состав[1]);
		ПолеСправа = СтрЗаменить(ПолеСправа, ИсточникСправа.Псевдоним + ".", "");
		Если ИсточникСлева.ДоступныеПоля.Найти(ПолеСлева) = Неопределено Тогда
			ЭтоСвязь = Ложь;
			Прервать
		КонецЕсли;
		Если ИсточникСправа.ДоступныеПоля.Найти(ПолеСправа) = Неопределено Тогда
			ЭтоСвязь = Ложь;
			Прервать
		КонецЕсли;
		Если ПолеСлева = ПолеСправа Тогда
			ПоляСвязи.Добавить(ПолеСлева);
			Продолжить;
		КонецЕсли;
		ПоляСвязи.Добавить(СтрШаблон("%1 = %2", ПолеСлева, ПолеСправа));
	КонецЦикла;
	Если ЭтоСвязь Тогда
		Строки.Добавить(СтрШаблон("МодельЗапроса.%1(""%2"", ""%3"").Связь(""%4"");", Метод, ИсточникСлева.Псевдоним, ИсточникСправа.Псевдоним, СтрСоединить(ПоляСвязи, ", ")));
		Возврат;
	КонецЕсли;			
	Условие = ОбщийКлиентСервер.ЭкранироватьТекст(Условие);
	Условие = СтрЗаменить(Условие, ИсточникСлева.Псевдоним, "%1");
	Условие = СтрЗаменить(Условие, ИсточникСправа.Псевдоним, "%2");
	Строки.Добавить(СтрШаблон("МодельЗапроса.%1(""%2"", ""%3"").УсловиеСвязи(""%4"");", Метод, ИсточникСлева.Псевдоним, ИсточникСправа.Псевдоним, Условие));
КонецПроцедуры

&НаСервере
Функция ПолучитьТекстЗапроса()
	Перем МодельЗапроса;
	Выполнить(Объект.ТекстМодели.ПолучитьТекст());
	Возврат МодельЗапроса.СхемаЗапроса.ПолучитьТекстЗапроса();
КонецФункции

&НаКлиенте
Процедура КомандаПолучитьТекстЗапроса(Команда)
	Текст = Новый ТекстовыйДокумент;
	Текст.УстановитьТекст(ПолучитьТекстЗапроса());
	Текст.Показать("Текст запроса из модели");
КонецПроцедуры

&НаСервере
Функция ПривестиСтроку(Строка, ОчиститьВызов = Истина, ОчиститьОкончание = Истина)
	Результат = Строка;
	Если ОчиститьВызов Тогда
		Результат = СтрЗаменить(Результат, "МодельЗапроса", "");
	КонецЕсли;		
	Если ОчиститьОкончание Тогда
		Результат = СтрЗаменить(Результат, ";", "");
	КонецЕсли;		
	Возврат Результат;
КонецФункции

&НаСервере
Процедура ДобавитьСтроки(СтрокиПолучателя, СтрокиИсточника, Отступ = 0, ПерваяСтрокаБезОтступа = Ложь, ТекучийИнтерфейс = Ложь)
	СтрокаОтступа = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов(Символы.Таб, Отступ);
	Если ТекучийИнтерфейс Тогда
		Для й = 0 По СтрокиИсточника.ВГраница() Цикл
			Если й = 0 И ПерваяСтрокаБезОтступа Тогда
				СтрокиПолучателя.Добавить(ПривестиСтроку(СтрШаблон("%1", СтрокиИсточника[й]), Ложь, Истина));
			ИначеЕсли й = СтрокиИсточника.ВГраница() Тогда
				СтрокиПолучателя.Добавить(ПривестиСтроку(СтрШаблон("%1%2", СтрокаОтступа, СтрокиИсточника[й]), Истина, Ложь));
			Иначе
				СтрокиПолучателя.Добавить(ПривестиСтроку(СтрШаблон("%1%2", СтрокаОтступа, СтрокиИсточника[й])));
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	Для й = 0 По СтрокиИсточника.ВГраница() Цикл
		Если й = 0 И ПерваяСтрокаБезОтступа Тогда
			СтрокиПолучателя.Добавить(СтрШаблон("%1", СтрокиИсточника[й]));
		Иначе
			СтрокиПолучателя.Добавить(СтрШаблон("%1%2", СтрокаОтступа, СтрокиИсточника[й]));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьТекстОператора(Строки, ЗапросПакета, ОператорВыбрать, ЭтоПервыйОператор, Уровень = 0)
	Если ЭтоПервыйОператор Тогда
		ИмяМетода = "Выбрать";
	ИначеЕсли ОператорВыбрать.ТипОбъединения = ТипОбъединенияСхемыЗапроса.ОбъединитьВсе Тогда
		ИмяМетода = "ОбъединитьВсе";
	Иначе
		ИмяМетода = "Объединить";
	КонецЕсли;
	Если ОператорВыбрать.КоличествоПолучаемыхЗаписей = Неопределено Тогда
		ВыбратьПервые = "";
	Иначе
		ВыбратьПервые = Формат(ОператорВыбрать.КоличествоПолучаемыхЗаписей, "ЧГ=;");
	КонецЕсли;
	Если ОператорВыбрать.ВыбиратьРазличные Тогда
		Строки.Добавить(СтрШаблон("МодельЗапроса.%1(%2, Истина)", ИмяМетода, ВыбратьПервые));
	Иначе
		Строки.Добавить(СтрШаблон("МодельЗапроса.%1(%2)", ИмяМетода, ВыбратьПервые));
	КонецЕсли;

	Для Каждого Источник Из ОператорВыбрать.Источники Цикл
		ТипИсточника = ТипЗнч(Источник.Источник);
		Если ТипИсточника = Тип("ВложенныйЗапросСхемыЗапроса") Тогда
			ВложенныйЗапрос = Источник.Источник.Запрос;
			Строки.Добавить(СтрШаблон("МодельЗапроса.ИсточникНачать(""%1"");", Источник.Источник.Псевдоним));
			ЭтоПервыйОператорВложенногоЗапроса = Истина;
			СтрокиВложенногоЗапроса = Новый Массив;
			Для Каждого ВложенныйЗапросОператорВыбрать Из ВложенныйЗапрос.Операторы Цикл
				СтрокиОператора = Новый Массив;
				ДобавитьТекстОператора(СтрокиОператора, ВложенныйЗапрос, ВложенныйЗапросОператорВыбрать, ЭтоПервыйОператорВложенногоЗапроса, Уровень + 1);
				ДобавитьСтроки(СтрокиВложенногоЗапроса, СтрокиОператора, 1, Истина);
				ЭтоПервыйОператорВложенногоЗапроса = Ложь;						
			КонецЦикла;
			ДобавитьСтроки(Строки, СтрокиВложенногоЗапроса, Уровень + 1);
			Строки.Добавить(СтрШаблон("МодельЗапроса.ИсточникЗавершить();"));
			Продолжить;
		КонецЕсли;
		ИмяТаблицы = Источник.Источник.ИмяТаблицы;
		Псевдоним = Источник.Источник.Псевдоним;
		Если ТипИсточника = Тип("ОписаниеВременнойТаблицыСхемыЗапроса") Тогда
			Строки.Добавить(СтрШаблон("МодельЗапроса.Источник(""%1"", ""%2"");", ИмяТаблицы, Псевдоним));
			Продолжить;
		КонецЕсли;					
		СтруктураПараметров = РаботаСоСхемойЗапроса.ПараметрыВиртуальнойТаблицы(ИмяТаблицы, Источник.Источник.Параметры);
		Если СтруктураПараметров = Неопределено Тогда
			Если Псевдоним = ОбщийКлиентСервер.ОкончаниеСтрокиПослеРазделителя(ИмяТаблицы) Тогда
				Строки.Добавить(СтрШаблон("МодельЗапроса.Источник(""%1"");", ИмяТаблицы));					
			Иначе
				Строки.Добавить(СтрШаблон("МодельЗапроса.Источник(""%1"", ""%2"");", ИмяТаблицы, Псевдоним));					
			КонецЕсли;
		Иначе
			ОписаниеКлючейПараметров = "";
			Для Каждого ЭлементПараметра Из СтруктураПараметров Цикл
				ОписаниеКлючейПараметров = ОписаниеКлючейПараметров + ?(ОписаниеКлючейПараметров = "", "", ", ") + ЭлементПараметра.Ключ;
			КонецЦикла;
			ОписаниеЗначенийПараметров = "";
			Для Каждого ЭлементПараметра Из СтруктураПараметров Цикл
				ОписаниеЗначенийПараметров = ОписаниеЗначенийПараметров + ?(ОписаниеЗначенийПараметров = "", "", ", ") + """" + ЭлементПараметра.Значение + """";
			КонецЦикла;
			ПараметрыТаблицы = "Новый Структура(""" + ОписаниеКлючейПараметров + """, " + ОписаниеЗначенийПараметров + ")";
			Строки.Добавить(СтрШаблон("МодельЗапроса.Источник(""%1"", ""%2"", %3);", ИмяТаблицы, Псевдоним, ПараметрыТаблицы));					
		КонецЕсли;
	КонецЦикла;
	Для Каждого Источник Из ОператорВыбрать.Источники Цикл
		Для Каждого Соединение Из Источник.Соединения Цикл
			ДобавитьТекстСоединения(Строки, Источник, Соединение);
		КонецЦикла;					
	КонецЦикла;
	Для Каждого ВыбранноеПоле Из ОператорВыбрать.ВыбираемыеПоля Цикл
		ДобавитьТекстПоля(Строки, ЗапросПакета, ВыбранноеПоле);
	КонецЦикла;
	Для Каждого Выражение Из ОператорВыбрать.Отбор Цикл
		Строки.Добавить(СтрШаблон("МодельЗапроса.Отбор(""%1"");", ОбщийКлиентСервер.ЭкранироватьТекст(Выражение)));
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьТекстПорядка(Строки, ВыражениеПорядка)
	Элемент = ВыражениеПорядка.Элемент;
	Если ТипЗнч(Элемент) = Тип("ВыражениеСхемыЗапроса") Тогда
		Псевдоним = Строка(Элемент);
	Иначе
		Псевдоним = ВыражениеПорядка.Элемент.Псевдоним;//Тип("КолонкаСхемыЗапроса")
	КонецЕсли;
	Если ВыражениеПорядка.Направление = НаправлениеПорядкаСхемыЗапроса.ПоВозрастанию Тогда
		Строки.Добавить(СтрШаблон("МодельЗапроса.Порядок(""%1"");", Псевдоним));
	Иначе
		Строки.Добавить(СтрШаблон("МодельЗапроса.Порядок(""%1"", НаправлениеПорядкаСхемыЗапроса.%2);", Псевдоним, ОбщийКлиентСервер.CamelCase(Строка(ВыражениеПорядка.Направление))));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьТекстЗапроса(Строки, ЗапросПакета)
	Если ТипЗнч(ЗапросПакета) = Тип("ЗапросУничтоженияТаблицыСхемыЗапроса") Тогда
		Строки.Добавить(СтрШаблон("//  ЗАПРОС УНИЧТОЖЕНИЯ. %1", ЗапросПакета.ИмяТаблицы));
		Строки.Добавить(СтрШаблон("МодельЗапроса.Уничтожить(""%1"");", ЗапросПакета.ИмяТаблицы));
		Возврат;
	КонецЕсли;			
	//  Общее
	ЭтоВременнаяТаблица = НЕ ПустаяСтрока(ЗапросПакета.ТаблицаДляПомещения);
	Если ЭтоВременнаяТаблица Тогда
		Строки.Добавить(СтрШаблон("//  ЗАПРОС ПАКЕТА. %1", ЗапросПакета.ТаблицаДляПомещения));
		Строки.Добавить(СтрШаблон("МодельЗапроса.ЗапросПакета();"));
		Строки.Добавить(СтрШаблон("МодельЗапроса.Поместить(""%1"");", ЗапросПакета.ТаблицаДляПомещения));
	Иначе
		Если ЗапросПакета.Операторы.Количество() = 1 И ЗапросПакета.Операторы[0].Источники.Количество() = 1 Тогда
			ИмяЗапроса = ЗапросПакета.Операторы[0].Источники[0].Источник.Псевдоним;
			Метки.Добавить(ИмяЗапроса);
			Строки.Добавить(СтрШаблон("//  ЗАПРОС ПАКЕТА. %1", ИмяЗапроса));
			Строки.Добавить(СтрШаблон("МодельЗапроса.ЗапросПакета(""%1"");", ИмяЗапроса));
		Иначе
			Строки.Добавить(СтрШаблон("//  ЗАПРОС ПАКЕТА."));
			Строки.Добавить(СтрШаблон("МодельЗапроса.ЗапросПакета();"));
		КонецЕсли;
	КонецЕсли;
	Если ЗапросПакета.ВыбиратьРазрешенные Тогда
		Строки.Добавить(СтрШаблон("МодельЗапроса.Разрешенные();"));
	КонецЕсли;
	ЭтоПервыйОператор = Истина;
	Для Каждого ОператорВыбрать Из ЗапросПакета.Операторы Цикл
		СтрокиОператора = Новый Массив;
		ДобавитьТекстОператора(СтрокиОператора, ЗапросПакета, ОператорВыбрать, ЭтоПервыйОператор);
		ДобавитьСтроки(Строки, СтрокиОператора, 1, Истина, Истина);
		ЭтоПервыйОператор = Ложь;						
	КонецЦикла;
	//  Порядок
	Для Каждого ВыражениеПорядка Из ЗапросПакета.Порядок Цикл
		ДобавитьТекстПорядка(Строки, ВыражениеПорядка);
	КонецЦикла;
	Если ЗапросПакета.Автопорядок Тогда
		Строки.Добавить(СтрШаблон("МодельЗапроса.Автопорядок();"));
	КонецЕсли;
	//  Итоги
	Для Каждого КонтрольнаяТочкаИтогов Из ЗапросПакета.КонтрольныеТочкиИтогов Цикл
		Если ТипЗнч(КонтрольнаяТочкаИтогов.Выражение) = Тип("ВыражениеСхемыЗапроса") Тогда
			Выражение = КонтрольнаяТочкаИтогов.Выражение;
		Иначе // КолонкаСхемыЗапроса
			Выражение = КонтрольнаяТочкаИтогов.Выражение.Псевдоним;
		КонецЕсли;
		ИмяКолонкиСовпадаетСВыражением = Строка(Выражение) = КонтрольнаяТочкаИтогов.ИмяКолонки;
		Если КонтрольнаяТочкаИтогов.ТипКонтрольнойТочки = ТипКонтрольнойТочкиСхемыЗапроса.Элементы Тогда
			Если ИмяКолонкиСовпадаетСВыражением Тогда
				Строки.Добавить(СтрШаблон("МодельЗапроса.Группировка(""%1"");", Выражение));
			Иначе
				Строки.Добавить(СтрШаблон("МодельЗапроса.Группировка(""%1"", ""%2"");", Выражение, КонтрольнаяТочкаИтогов.ИмяКолонки));
			КонецЕсли;
		Иначе
			Если ИмяКолонкиСовпадаетСВыражением Тогда
				Строки.Добавить(СтрШаблон("МодельЗапроса.Группировка(""%1"", , ТипКонтрольнойТочкиСхемыЗапроса.%3);", Выражение, , ОбщийКлиентСервер.CamelCase(Строка(КонтрольнаяТочкаИтогов.ТипКонтрольнойТочки))));
			Иначе
				Строки.Добавить(СтрШаблон("МодельЗапроса.Группировка(""%1"", ""%2"", ТипКонтрольнойТочкиСхемыЗапроса.%3);", Выражение, КонтрольнаяТочкаИтогов.ИмяКолонки, ОбщийКлиентСервер.CamelCase(Строка(КонтрольнаяТочкаИтогов.ТипКонтрольнойТочки))));
			КонецЕсли;
		КонецЕсли;
		Если КонтрольнаяТочкаИтогов.ТипДополненияПериодами = ТипДополненияПериодамиСхемыЗапроса.БезДополнения Тогда
			Продолжить;
		КонецЕсли;
		Строки.Добавить(СтрШаблон("МодельЗапроса.ПоПериодам(ТипДополненияПериодамиСхемыЗапроса.%1, ""%2"", ""%3"");", ОбщийКлиентСервер.CamelCase(Строка(КонтрольнаяТочкаИтогов.ТипДополненияПериодами)), КонтрольнаяТочкаИтогов.НачалоПериодаДополнения, КонтрольнаяТочкаИтогов.КонецПериодаДополнения));
	КонецЦикла;
	Для Каждого ВыражениеИтогов Из ЗапросПакета.ВыраженияИтогов Цикл
		Если СтрШаблон("СУММА(%1)", ВыражениеИтогов.Поле.Псевдоним) = Строка(ВыражениеИтогов.Выражение) Тогда
			Строки.Добавить(СтрШаблон("МодельЗапроса.ИтогСумма(""%1"");", ВыражениеИтогов.Поле.Псевдоним));
		Иначе
			Строки.Добавить(СтрШаблон("МодельЗапроса.Итог(""%1"", ""%2"");", ВыражениеИтогов.Выражение, ВыражениеИтогов.Поле.Псевдоним));
		КонецЕсли;
	КонецЦикла;
	Если ЗапросПакета.ОбщиеИтоги Тогда
		Строки.Добавить(СтрШаблон("МодельЗапроса.ОбщиеИтоги();"));
	КонецЕсли;
	//  Индексы
	Для Каждого Индекс Из ЗапросПакета.Индекс Цикл
		Строки.Добавить(СтрШаблон("МодельЗапроса.Индекс(""%1"");", Индекс.Выражение.Псевдоним));
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьТестУстановкиПараметров(Строки, СхемаЗапроса)
	Если СхемаЗапроса.НайтиПараметры().Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	Строки.Добавить("//  Установка параметров");
	Для Каждого Параметр Из СхемаЗапроса.НайтиПараметры() Цикл
		Строки.Добавить(СтрШаблон("МодельЗапроса.Параметр(""%1"", );// %2", Параметр.Имя, Параметр.ТипЗначения));
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура КомандаПолучитьТекстМоделиНаСервере()
	Метки = Новый Массив;
	Строки = Новый Массив;
	Строки.Добавить("МодельЗапроса = Общий.МодельЗапроса();");
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(Объект.ТекстЗапроса.ПолучитьТекст());
	ТекстМодели = Объект.ТекстМодели;
	ТекстМодели.Очистить();
	//  Запросы
	Для Каждого ЗапросПакета Из СхемаЗапроса.ПакетЗапросов Цикл
		ДобавитьТекстЗапроса(Строки, ЗапросПакета);		
	КонецЦикла;
	ДобавитьТестУстановкиПараметров(Строки, СхемаЗапроса);
	Строки.Добавить("//  Обработка результата");
	Строки.Добавить(СтрШаблон("//МодельЗапроса.ВыполнитьЗапрос();"));
	Для Каждого Метка Из Метки Цикл
		Строки.Добавить(СтрШаблон("//Результат = МодельЗапроса.Результат(""%1"");", Метка));		
	КонецЦикла;
	Объект.ТекстМодели.УстановитьТекст(СтрСоединить(Строки, Символы.ПС));	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ОткрытьКонструкторЗапроса()
	Конструктор			= Новый КонструкторЗапроса;
	Конструктор.Текст	= Объект.ТекстЗапроса.ПолучитьТекст();
	ТекстЗапроса = Ждать Конструктор.ОткрытьАсинх();
	Если ТекстЗапроса <> Неопределено Тогда
		Объект.ТекстЗапроса.УстановитьТекст(ТекстЗапроса);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьКонструкторЗапроса(Команда)
	ОткрытьКонструкторЗапроса();
КонецПроцедуры
